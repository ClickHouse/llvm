diff --git a/llvm/lib/CodeGen/CMakeLists.txt b/llvm/lib/CodeGen/CMakeLists.txt
index 32a7946af63b..fdd320148d69 100644
--- a/llvm/lib/CodeGen/CMakeLists.txt
+++ b/llvm/lib/CodeGen/CMakeLists.txt
@@ -195,8 +195,6 @@ add_llvm_component_library(LLVMCodeGen
   ${LLVM_MAIN_INCLUDE_DIR}/llvm/CodeGen
   ${LLVM_MAIN_INCLUDE_DIR}/llvm/CodeGen/PBQP
 
-  LINK_LIBS ${LLVM_PTHREAD_LIB}
-
   DEPENDS
   intrinsics_gen
 
diff --git a/llvm/lib/Support/CMakeLists.txt b/llvm/lib/Support/CMakeLists.txt
index cdee11412eb5..087a2bbb120e 100644
--- a/llvm/lib/Support/CMakeLists.txt
+++ b/llvm/lib/Support/CMakeLists.txt
@@ -4,50 +4,50 @@ if(LLVM_ENABLE_ZLIB)
   set(imported_libs ZLIB::ZLIB)
 endif()
 
-if( MSVC OR MINGW )
-  # libuuid required for FOLDERID_Profile usage in lib/Support/Windows/Path.inc.
-  # advapi32 required for CryptAcquireContextW in lib/Support/Windows/Path.inc.
-  set(system_libs ${system_libs} psapi shell32 ole32 uuid advapi32)
-elseif( CMAKE_HOST_UNIX )
-  if( HAVE_LIBRT )
-    set(system_libs ${system_libs} rt)
-  endif()
-  if( HAVE_LIBDL )
-    set(system_libs ${system_libs} ${CMAKE_DL_LIBS})
-  endif()
-  if( HAVE_BACKTRACE AND NOT "${Backtrace_LIBRARIES}" STREQUAL "" )
-    # On BSDs, CMake returns a fully qualified path to the backtrace library.
-    # We need to remove the path and the 'lib' prefix, to make it look like a
-    # regular short library name, suitable for appending to a -l link flag.
-    get_filename_component(Backtrace_LIBFILE ${Backtrace_LIBRARIES} NAME_WE)
-    STRING(REGEX REPLACE "^lib" "" Backtrace_LIBFILE ${Backtrace_LIBFILE})
-    set(system_libs ${system_libs} ${Backtrace_LIBFILE})
-  endif()
-  if( LLVM_ENABLE_TERMINFO )
-    set(imported_libs ${imported_libs} "${TERMINFO_LIB}")
-  endif()
-  if( LLVM_ENABLE_THREADS AND (HAVE_LIBATOMIC OR HAVE_CXX_LIBATOMICS64) )
-    set(system_libs ${system_libs} atomic)
-  endif()
-  set(system_libs ${system_libs} ${LLVM_PTHREAD_LIB})
-  if( UNIX AND NOT (BEOS OR HAIKU) )
-    set(system_libs ${system_libs} m)
-  endif()
-  if( FUCHSIA )
-    set(system_libs ${system_libs} zircon)
-  endif()
-endif( MSVC OR MINGW )
+# if( MSVC OR MINGW )
+#   # libuuid required for FOLDERID_Profile usage in lib/Support/Windows/Path.inc.
+#   # advapi32 required for CryptAcquireContextW in lib/Support/Windows/Path.inc.
+#   set(system_libs ${system_libs} psapi shell32 ole32 uuid advapi32)
+# elseif( CMAKE_HOST_UNIX )
+#   if( HAVE_LIBRT )
+#     set(system_libs ${system_libs} rt)
+#   endif()
+#   if( HAVE_LIBDL )
+#     set(system_libs ${system_libs} ${CMAKE_DL_LIBS})
+#   endif()
+#   if( HAVE_BACKTRACE AND NOT "${Backtrace_LIBRARIES}" STREQUAL "" )
+#     # On BSDs, CMake returns a fully qualified path to the backtrace library.
+#     # We need to remove the path and the 'lib' prefix, to make it look like a
+#     # regular short library name, suitable for appending to a -l link flag.
+#     get_filename_component(Backtrace_LIBFILE ${Backtrace_LIBRARIES} NAME_WE)
+#     STRING(REGEX REPLACE "^lib" "" Backtrace_LIBFILE ${Backtrace_LIBFILE})
+#     set(system_libs ${system_libs} ${Backtrace_LIBFILE})
+#   endif()
+#   if( LLVM_ENABLE_TERMINFO )
+#     set(imported_libs ${imported_libs} "${TERMINFO_LIB}")
+#   endif()
+#   if( LLVM_ENABLE_THREADS AND (HAVE_LIBATOMIC OR HAVE_CXX_LIBATOMICS64) )
+#     set(system_libs ${system_libs} atomic)
+#   endif()
+#   set(system_libs ${system_libs} ${LLVM_PTHREAD_LIB})
+#   if( UNIX AND NOT (BEOS OR HAIKU) )
+#     set(system_libs ${system_libs} m)
+#   endif()
+#   if( FUCHSIA )
+#     set(system_libs ${system_libs} zircon)
+#   endif()
+# endif( MSVC OR MINGW )
 
-# Delay load shell32.dll if possible to speed up process startup.
-set (delayload_flags)
-if (MSVC)
-  set (delayload_flags delayimp -delayload:shell32.dll -delayload:ole32.dll)
-endif()
+# # Delay load shell32.dll if possible to speed up process startup.
+# set (delayload_flags)
+# if (MSVC)
+#   set (delayload_flags delayimp -delayload:shell32.dll -delayload:ole32.dll)
+# endif()
 
-# Link Z3 if the user wants to build it.
-if(LLVM_WITH_Z3)
-  set(system_libs ${system_libs} ${Z3_LIBRARIES})
-endif()
+# # Link Z3 if the user wants to build it.
+# if(LLVM_WITH_Z3)
+#   set(system_libs ${system_libs} ${Z3_LIBRARIES})
+# endif()
 
 # Override the C runtime allocator on Windows and embed it into LLVM tools & libraries
 if(LLVM_INTEGRATED_CRT_ALLOC)
